generator client {
  provider = "prisma-client-js"
  previewFeatures = ["clientExtensions", "postgresqlExtensions"]
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
  extensions      = [pgcrypto]
}

model account {
  id           String   @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  account_name String   @db.VarChar(255)
  user_id      String   @db.Uuid
  status       String?  @db.VarChar(20)
  created_at   DateTime @default(now()) @db.Timestamp(6)
  updated_at   DateTime @default(now()) @db.Timestamp(6)
  user         user     @relation(fields: [user_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
}

model audit_log {
  id          String   @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  user_id     String   @db.Uuid
  action      String   @db.VarChar(255)
  timestamp   DateTime @default(now()) @db.Timestamp(6)
  description String?  @db.VarChar(255)
  ip_address  String?  @db.VarChar(50)
  device_info String?  @db.VarChar(255)
  created_at  DateTime @default(now()) @db.Timestamp(6)
  updated_at  DateTime @default(now()) @db.Timestamp(6)
  user        user     @relation(fields: [user_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
}

model client {
  id           String   @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  description  String?  @db.VarChar(255)
  address      String?  @db.VarChar(255)
  phone_number String?  @db.VarChar(20)
  website      String?  @db.VarChar(255)
  name         String   @db.VarChar(255)
  created_at   DateTime @default(now()) @db.Timestamp(6)
  updated_at   DateTime @default(now()) @db.Timestamp(6)
  user_id      String   @db.Uuid
  tenant_id    String   @db.VarChar(255)
  user         user     @relation(fields: [user_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
}

model key {
  id         String    @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  key_value  String    @db.VarChar(255)
  user_id    String    @db.Uuid
  expires_at DateTime? @db.Timestamp(6)
  created_at DateTime  @default(now()) @db.Timestamp(6)
  updated_at DateTime  @default(now()) @db.Timestamp(6)
  user       user      @relation(fields: [user_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
}

model session {
  id          String    @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  user_id     String    @db.Uuid
  login_time  DateTime  @default(now()) @db.Timestamp(6)
  logout_time DateTime? @db.Timestamp(6)
  ip_address  String?   @db.VarChar(50)
  device_info String?   @db.VarChar(255)
  location    String?   @db.VarChar(255)
  created_at  DateTime  @default(now()) @db.Timestamp(6)
  updated_at  DateTime  @default(now()) @db.Timestamp(6)
  user        user      @relation(fields: [user_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
}

model user {
  id          String      @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  email       String      @unique @db.VarChar(255)
  firstName   String?     @db.VarChar(255)
  lastName    String?     @db.VarChar(255)
  roq_user_id String      @db.VarChar(255)
  tenant_id   String      @db.VarChar(255)
  created_at  DateTime    @default(now()) @db.Timestamp(6)
  updated_at  DateTime    @default(now()) @db.Timestamp(6)
  account     account[]
  audit_log   audit_log[]
  client      client[]
  key         key[]
  session     session[]
}
